// <auto-generated />
using ConsoleRpgEntities.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleRpgEntities.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20250514234431_AddUnitDepletedTurns")]
    partial class AddUnitDepletedTurns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AbilityUnit", b =>
                {
                    b.Property<int>("AbilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("UnitsId")
                        .HasColumnType("int");

                    b.HasKey("AbilitiesId", "UnitsId");

                    b.HasIndex("UnitsId");

                    b.ToTable("UnitAbility", (string)null);
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Abilities.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AbilityType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abilities");

                    b.HasDiscriminator<string>("AbilityType").HasValue("Ability");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Combat.Stat", b =>
                {
                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Luck")
                        .HasColumnType("int");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<int>("MaxHitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Movement")
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("UnitId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Dungeons.Dungeon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartingRoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StartingRoomId");

                    b.ToTable("Dungeons");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int>("MaxDurability")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("ItemType").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.UnitItem", b =>
                {
                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .HasColumnType("int");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.HasKey("UnitId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("UnitItems");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Rooms.AdjacentRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("ConnectingRoomId")
                        .HasColumnType("int");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.HasKey("RoomId", "ConnectingRoomId");

                    b.HasIndex("ConnectingRoomId");

                    b.ToTable("AdjacentRooms");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Rooms.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Abstracts.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentRoomId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTurnDepleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentRoomId");

                    b.HasIndex("ItemId");

                    b.ToTable("Units");

                    b.HasDiscriminator<string>("UnitType").HasValue("Unit");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Abilities.UnitAbilities.FlyAbility", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Abilities.Ability");

                    b.HasDiscriminator().HasValue("FlyAbility");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Abilities.UnitAbilities.HealAbility", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Abilities.Ability");

                    b.HasDiscriminator().HasValue("HealAbility");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Abilities.UnitAbilities.StealAbility", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Abilities.Ability");

                    b.HasDiscriminator().HasValue("StealAbility");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Abilities.UnitAbilities.TauntAbility", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Abilities.Ability");

                    b.HasDiscriminator().HasValue("TauntAbility");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.ConsumableItems.ItemBook", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.HasDiscriminator().HasValue("ItemBook");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.ConsumableItems.ItemLockpick", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.HasDiscriminator().HasValue("ItemLockpick");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.ConsumableItems.ItemPotion", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.HasDiscriminator().HasValue("ItemPotion");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.EquippableItems.ArmorItems.ChestArmorItem", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.Property<int>("ArmorType")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("ArmorType");

                    b.Property<int>("Defense")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("ExpModifier")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("RequiredRank")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ChestArmorItem");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.EquippableItems.ArmorItems.FeetArmorItem", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.Property<int>("ArmorType")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("ArmorType");

                    b.Property<int>("Defense")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("ExpModifier")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("RequiredRank")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("FeetArmorItem");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.EquippableItems.ArmorItems.HeadArmorItem", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.Property<int>("ArmorType")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("ArmorType");

                    b.Property<int>("Defense")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("ExpModifier")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("RequiredRank")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("HeadArmorItem");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.EquippableItems.ArmorItems.LegArmorItem", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.Property<int>("ArmorType")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("ArmorType");

                    b.Property<int>("Defense")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("ExpModifier")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("RequiredRank")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("LegArmorItem");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.EquippableItems.WeaponItems.MagicWeaponItem", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.Property<int>("Crit")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("ExpModifier")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Hit")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Might")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Range")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("RequiredRank")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("WeaponType")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("MagicWeaponItem");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.EquippableItems.WeaponItems.PhysicalWeaponItem", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.Property<int>("Crit")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Durability")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("ExpModifier")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Hit")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Might")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Range")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("RequiredRank")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("WeaponType")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PhysicalWeaponItem");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.GenericItem", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Items.Item");

                    b.HasDiscriminator().HasValue("GenericItem");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Characters.Cleric", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Cleric");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Characters.Fighter", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Fighter");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Characters.Knight", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Knight");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Characters.Rogue", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Rogue");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Characters.Wizard", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Wizard");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Monsters.EnemyArcher", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyArcher");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Monsters.EnemyCleric", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyCleric");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Monsters.EnemyGhost", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyGhost");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Monsters.EnemyGoblin", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyGoblin");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Monsters.EnemyMage", b =>
                {
                    b.HasBaseType("ConsoleRpgEntities.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyMage");
                });

            modelBuilder.Entity("AbilityUnit", b =>
                {
                    b.HasOne("ConsoleRpgEntities.Models.Abilities.Ability", null)
                        .WithMany()
                        .HasForeignKey("AbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleRpgEntities.Models.Units.Abstracts.Unit", null)
                        .WithMany()
                        .HasForeignKey("UnitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Combat.Stat", b =>
                {
                    b.HasOne("ConsoleRpgEntities.Models.Units.Abstracts.Unit", "Unit")
                        .WithOne("Stat")
                        .HasForeignKey("ConsoleRpgEntities.Models.Combat.Stat", "UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Dungeons.Dungeon", b =>
                {
                    b.HasOne("ConsoleRpgEntities.Models.Rooms.Room", "StartingRoom")
                        .WithMany()
                        .HasForeignKey("StartingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StartingRoom");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.UnitItem", b =>
                {
                    b.HasOne("ConsoleRpgEntities.Models.Items.Item", "Item")
                        .WithMany("UnitItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleRpgEntities.Models.Units.Abstracts.Unit", "Unit")
                        .WithMany("UnitItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Rooms.AdjacentRoom", b =>
                {
                    b.HasOne("ConsoleRpgEntities.Models.Rooms.Room", "ConnectingRoom")
                        .WithMany()
                        .HasForeignKey("ConnectingRoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConsoleRpgEntities.Models.Rooms.Room", "Room")
                        .WithMany("AdjacentRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConnectingRoom");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Abstracts.Unit", b =>
                {
                    b.HasOne("ConsoleRpgEntities.Models.Rooms.Room", "CurrentRoom")
                        .WithMany("Units")
                        .HasForeignKey("CurrentRoomId");

                    b.HasOne("ConsoleRpgEntities.Models.Items.Item", null)
                        .WithMany("Units")
                        .HasForeignKey("ItemId");

                    b.Navigation("CurrentRoom");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Items.Item", b =>
                {
                    b.Navigation("UnitItems");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Rooms.Room", b =>
                {
                    b.Navigation("AdjacentRooms");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("ConsoleRpgEntities.Models.Units.Abstracts.Unit", b =>
                {
                    b.Navigation("Stat")
                        .IsRequired();

                    b.Navigation("UnitItems");
                });
#pragma warning restore 612, 618
        }
    }
}
